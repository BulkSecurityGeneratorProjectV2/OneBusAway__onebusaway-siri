Usage:
  [-args] request [request ...]

Args:
  -id value                       the client's SIRI participant id
  -clientUrl url                  the url your client publishes to a server in publish/subscribe
  -privateClientUrl url           the internal url your client will actually bind to, if specified (default=clientUrl)
  -output path                    write SIRI payload output to the specified path
  -responseTimeout time           time, in seconds, to wait for a response from a SIRI endpoint after a request
  -connectionTimeout=time         time, in seconds, to wait when establishing or reading from an HTTP connection
  -logRawXml ...                  if specified, indicates the raw SIRI request and response XML should be logged to the console
                                  valid values are "NONE" (the default), "DATA", "CONTROL", and "ALL"
  
  -subscribe                      the client should perform a publish/subscribe (default is request/response)
  -terminateSubscription		  the client should send a TerminateSubscriptionRequest and wait for a response
  -checkStatus                    the client should send a CheckStatus request and wait for a response

Request Examples:

     Requests control the connections that are made to remote SIRI data sources.
  At a minimum, it includes a url and a SIRI module type.  However, other
  options are available as well.  Here is a simple example to get you started:
 
    Url=http://host:port/path,ModuleType=VEHICLE_MONITORING
    Url=http://host:port/path,ModuleType=VEHICLE_MONITORING,VehicleRef=1234
  
  For more info on requests, see:
  
    http://developer.onebusaway.org/modules/onebusaway-siri/${project.version}/cli-request-spec.html

Output:

    By default, data received from a remote SIRI data-source will be output to
  the console.  However, with the -output argument, it is possible to write
  output to disk as well.  You can specify a single file, such as:
  
    -output /tmp/siri-output
    
  And all output will go to the file, appending new XML messages as they are
  received.  We also support simple variable substitution of the file name,
  using the same syntax as java.util.Formatter.  We pass a java.util.Date
  object as the first argument to the formatter, which means you can do complex
  time-based naming of the output files.  For example, the following:
  
     -output /tmp/siri-%1$tFT%1$tT.%1$tL.xml
     
   will write each received XML message to a separate file with a filename that
   looks like:
   
     /tmp/siri-2011-08-07T13:45:23.023.xml
     
Full Documentation:

    For full documentation on the onebusaway-siri-client-cli, see:
    
    http://developer.onebusaway.org/modules/onebusaway-siri/${project.version}/onebusaway-siri-client-cli.html